java.lang.AssertionError: assertion failed: position error, parent span does not contain child span
parent      = new IllegalArgumentException(null) # -1,
parent span = <600..999>,
child       = null # -1,
child span  = [629..1000..1000]
occurred in the presentation compiler.

action parameters:
uri: file://<WORKSPACE>/l01.scala
text:
def reverse4(x1: Int, x2: Int, x3: Int, x4: Int): (Int, Int, Int, Int) = (x4, x3, x2, x1)

def reverse4_tests =
    reverse4(1, 2, 3, 4) == (4, 3, 2, 1) && reverse4(1, 2, 3, 4) != (1, 2, 3, 4)

def sumProd(s: Int, e: Int): (Int, Int) = {
  if (s > e) throw new IllegalArgumentException("s > e")
  def aux(current: Int, sum: Int, prod: Int): (Int, Int) = {
    if (current > e) (sum, prod)
    else aux(current + 1, sum + current, prod * current)
  }
  aux(s, 0, 1)
}

def sumProd_tests =
    sumProd(1, 3) == (6, 6) && sumProd(1, 3) != (6, 7)

def isPerfect(n: Int): Boolean = {
    if (n < 1) throw new IllegalArgumentException("Only nat
    val divisors = {
        def aux(current: Int, divisors: List[Int]): List[Int] = {
            if (current == 0) divisors
            else if (n % current == 0) aux(current - 1, current :: divisors)
            else aux(current - 1, divisors)
        }
        aux(n-1, List())
    }
    val divisors_sum = divisors.foldLeft(0)(_ + _)
    divisors_sum == n
}

def isPerfect_tests =
    isPerfect(6) == true && isPerfect(5) == false && isPerfect(-1) == false && isPerfect(0) == false

def insert[A](lst: List[A], x: A, pos: Int): List[A] = {
    def aux(lst: List[A], x: A, pos: Int, acc: List[A]): List[A] = {
        lst match {
        case Nil => (x :: acc).reverse
        case hd :: tl => 
            if (pos == 0) (x :: acc).reverse ++ lst
            else aux(tl, x, pos - 1, hd :: acc)
        }
    }
    aux(lst, x, pos, List())
}


error stacktrace:
scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:8)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:175)
	dotty.tools.dotc.ast.Positioned.check$1$$anonfun$3(Positioned.scala:205)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	scala.collection.immutable.List.foreach(List.scala:333)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:205)
	dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:226)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:200)
	dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:226)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:200)
	dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:226)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:200)
	dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:226)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:200)
	dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:226)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:200)
	dotty.tools.dotc.ast.Positioned.check$1$$anonfun$3(Positioned.scala:205)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	scala.collection.immutable.List.foreach(List.scala:333)
	dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:205)
	dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:226)
	dotty.tools.dotc.parsing.Parser.parse$$anonfun$1(ParserPhase.scala:38)
	dotty.tools.dotc.parsing.Parser.parse$$anonfun$adapted$1(ParserPhase.scala:39)
	scala.Function0.apply$mcV$sp(Function0.scala:42)
	dotty.tools.dotc.core.Phases$Phase.monitor(Phases.scala:437)
	dotty.tools.dotc.parsing.Parser.parse(ParserPhase.scala:39)
	dotty.tools.dotc.parsing.Parser.runOn$$anonfun$1(ParserPhase.scala:48)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	scala.collection.immutable.List.foreach(List.scala:333)
	dotty.tools.dotc.parsing.Parser.runOn(ParserPhase.scala:48)
	dotty.tools.dotc.Run.runPhases$1$$anonfun$1(Run.scala:247)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1321)
	dotty.tools.dotc.Run.runPhases$1(Run.scala:263)
	dotty.tools.dotc.Run.compileUnits$$anonfun$1(Run.scala:271)
	dotty.tools.dotc.Run.compileUnits$$anonfun$adapted$1(Run.scala:280)
	dotty.tools.dotc.util.Stats$.maybeMonitored(Stats.scala:67)
	dotty.tools.dotc.Run.compileUnits(Run.scala:280)
	dotty.tools.dotc.Run.compileSources(Run.scala:195)
	dotty.tools.dotc.interactive.InteractiveDriver.run(InteractiveDriver.scala:165)
	scala.meta.internal.pc.MetalsDriver.run(MetalsDriver.scala:45)
	scala.meta.internal.pc.PcCollector.<init>(PcCollector.scala:42)
	scala.meta.internal.pc.PcSemanticTokensProvider$Collector$.<init>(PcSemanticTokensProvider.scala:60)
	scala.meta.internal.pc.PcSemanticTokensProvider.Collector$lzyINIT1(PcSemanticTokensProvider.scala:60)
	scala.meta.internal.pc.PcSemanticTokensProvider.Collector(PcSemanticTokensProvider.scala:60)
	scala.meta.internal.pc.PcSemanticTokensProvider.provide(PcSemanticTokensProvider.scala:81)
	scala.meta.internal.pc.ScalaPresentationCompiler.semanticTokens$$anonfun$1(ScalaPresentationCompiler.scala:95)
